name: PRs to Development

on:
  pull_request:
    types: opened
    branches:
      - development # Only trigger on development branch pushes
  workflow_dispatch: # Allow manual triggering of workflow

jobs:
  setup:
    name: Lint, Format & TS Compile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code # Pull latest version of code from repo, enables access to source files.
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }} # Keep the node version the same as project and for the whole workflow
          cache: 'pnpm'

      - name: Install Dependencies with pnpm
        # if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: pnpm install --frozen-lockfile

      - name: Run Prettier
        run: pnpm prettier:write # Define prettier command

      - name: Run ESLint
        run: pnpm lint # Define lint command

      - name: Check for TS errors
        run: tsc
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }} # Keep the node version the same as project and for the whole workflow
          cache: 'pnpm'

      - name: Install Dependencies with pnpm
        run: pnpm install --frozen-lockfile

      - name: Build the Project
        run: pnpm build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 'tsconfig.tsbuildinfo' # Name of the artifact
          path: './tsconfig.tsbuildinfo' # Path to the artifact

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: [setup, build] # Runs only if setup and build pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies with pnpm
        run: pnpm install --frozen-lockfile

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }} # Keep the node version the same as project and for the whole workflow
          cache: 'pnpm'

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'tsconfig.tsbuildinfo'

      - name: Run Unit Tests
        run: pnpm run test # Define a test command with coverage

  pact-tests:
    name: Pact Contract Tests
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: ${{ vars.RUN_CONTRACT_TESTS == 'true' }} # Only runs if enabled via GitHub Actions variable

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: 'tsconfig.tsbuildinfo'

      - name: Run Pact Contract Tests
        run: CONTRACT_TEST_COMMAND # Define a contract test command
